#include<stdio.h>
#include<stdlib.h>
#include<time.h>
	
typedef struct{
	unsigned int rows;
	unsigned int cols;
	float *elem;
}MAT;	
 
  void swap(int *a,int *b ){
 	int x;
 	x=*a;
 	*a=*b;
 	*b=x;
 }
	
 void permutacia(int *arr,int size){
 	int i,s;
 	srand(time(NULL));
 	for(i=0;i<size-i;i++){
 		s=i+rand()%(size-1-i);
 		swap(arr+i,arr+s);
	 }
 }
 
 char mat_create_random_permutation(MAT *mat){
 	int i;
 	int n=mat->rows;
        int *perm = (int*)malloc(sizeof(int)*mat->rows);
        for(i=0;i<n;i++){
 		perm[i]=i;
	 }

        permutacia(perm,n);

 	for(i=0;i<mat->rows*mat->cols;i++){
        mat->elem[i]=0;
        }

        for(i=0;i<mat->rows;i++){
        mat->elem[i*mat->cols+perm[i]]=1;
        }

  return 0;
 }

 void mat_print(MAT *mat){
 int i;
 for(i=0;i<mat->rows*mat->cols;i++){
  if(i!=0 && (i%(mat->cols))==0)
  printf("\n");
  printf("%1.1f ",mat->elem[i]);
 }
}
	
 
 MAT *mat_create_with_type(unsigned int rows,unsigned int cols){
 MAT *mat=(MAT*)malloc(sizeof(MAT)*1);
 mat->rows=rows;
 mat->cols=cols;
 mat->elem=(float*)malloc(sizeof(float)*rows*cols);
 return mat;
 }

 float ELEM(MAT*mat,int i,int j){
 return mat->elem[mat->cols*(i-1)+j];
 }


 int main(void){

 MAT *m1=mat_create_with_type(5,5);
 mat_create_random_permutation(m1);
 mat_print(m1);

 	return 0;
}